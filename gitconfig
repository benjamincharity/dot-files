[user]
	name = Benjamin Charity

[include]
    path = ~/.gitconfig-local

[alias]
    ci = commit
    co = checkout
    br = branch
    dt = difftool
    st = status
    co-pr = !sh -c 'git fetch origin pull/$1/head:pr/$1 && git checkout pr/$1' -
    lastchange = log -p --follow -n 1
    lg = "!f() { \
        git log -"$1" --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit; \
    }; f"
    aliases = !git config --list | grep ^alias\\. | cut -c 7- | grep -Ei --color \"$1\" "#"
    first = "!f() { \
        git rev-list --max-parents=0 HEAD --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit; \
    }; f"
    undo = reset --soft HEAD~1
    updateremote = remote set-url origin
    prs = browse -- pulls
    issues = browse -- issues
    projects = browse -- project
    deletebranch = "!f() { \
        git push origin --delete "$@"; \
        git branch -d "$@"; \
    }; f"
    linesperauthor = "!f() { \
        git ls-files | grep -v 'docs/' | while read f; do git blame --line-porcelain $f | grep '^author '; done | sort -f | uniq -ic | sort -n; \
    }; f"
    commitsperauthor = shortlog -s -n --all
    release = "!f() { \
        git log `git describe --tags --abbrev=0`..HEAD --oneline; \
    }; f"
    grep-no-spec = "!f() { \
        git grep \"$1\" \"$2\" \":(exclude)*.spec.ts\"; \
    }; f"
    # Which files are receiving the most "love"
    churn = !git log --all -M -C --name-only --format='format:' "$@" | sort | grep -v '^$' | uniq -c | sort | awk 'BEGIN {print "count,file"} {print $1 "," $2}'
[apply]
    whitespace = nowarn
[core]
    excludesfile = /Users/bc/.dot-files/.gitignore_global
    editor = vim
[color]
    branch = auto
    diff = auto
    interactive = auto
    status = auto
[merge]
	tool = fork
    keepBackup = false
[diff]
  tool = fork
[difftool]
  prompt = false
[difftool.fork]
  cmd = /Applications/Fork.app/Contents/Resources/git-diff "$LOCAL" "$REMOTE"
[mergetool.fork]
  cmd = /Applications/Fork.app/Contents/Resources/git-merge "$LOCAL" "$REMOTE" "$BASE" "$MERGED"
[heroku]
    account = personal
[github]
    user = benjamincharity
[push]
    default = current

[branch]
    autosetuprebase = always
[pull]
    rebase = true
[init]
    templatedir = ~/.dot-files/.git_template
	defaultBranch = main
[rerere]
    enabled = true
    autoupdate = true
[credential]
    helper = osxkeychain
[filter "lfs"]
    clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
    required = true
[grep]
    lineNumber = true
[gpg]
	program = /usr/local/bin/gpg
[commit]
	gpgsign = true